name: Push

on:
  push:
    branches:
      - main
env:
  DOCKER_FILE_PATH: Dockerfile
  GOLANG_VERSION: 1.19

jobs:
  build:
    name: Build
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GOLANG_VERSION }}

    # Setting up helm binary
    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.8.2

    - name: Lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        only-new-issues: false
        args: --timeout 10m

    # Run Tests
    - name: Test
      run: make test

    - name: Generate Tag
      id: generate_tag
      uses: anothrNick/github-tag-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
        WITH_V: true
        DEFAULT_BUMP: patch
        RELEASE_BRANCHES: main
        DRY_RUN: true

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Registry
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Generate image repository path
      run: |
        echo IMAGE_REPOSITORY=$(echo hussnain612/${{ github.repository }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ${{ env.DOCKER_FILE_PATH  }}
        pull: true
        push: true
        build-args: GIT_ACCESS_TOKEN=${{ secrets.TOKEN }}
        cache-to: type=inline
        tags: |
          ${{ env.IMAGE_REPOSITORY }}:${{ steps.generate_tag.outputs.new_tag }}

    - name: Comment on PR
      uses: mshick/add-pr-comment@v2
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        message-success: '@${{ github.actor }} Image is available for testing. `docker pull hussnain612/${{ github.repository }}:${{ steps.generate_tag.outputs.GIT_TAG }}`'
        message-failure	: '@${{ github.actor }} Yikes! You better fix it before anyone else finds out! [Build](https://github.com/${{ github.repository }}/commit/${{ github.event.pull_request.head.sha }}/checks) has Failed!'
        allow-repeats: true
